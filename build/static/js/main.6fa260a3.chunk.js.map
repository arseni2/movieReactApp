{"version":3,"sources":["reportWebVitals.js","api/api.ts","redux/HomeReducer.ts","redux/AppReducer.ts","redux/AuthReducer.ts","redux/redux.ts","component/Carousel/Carousel.tsx","component/Home/Home.tsx","component/Home/HomeContainer.tsx","component/Footer/Footer.tsx","component/Header/SearchMovie.tsx","component/movieDetail/FormReviews.tsx","component/Header/Header.tsx","component/Header/HeaderContainer.tsx","component/movieDetail/MovieDetail.tsx","component/movieDetail/MovieDetailContainer.tsx","component/Login/Login.tsx","component/Login/LoginContainer.tsx","bin/bin.tsx","App.tsx","component/loader/loader.tsx","component/RealLogin/RealLogin.tsx","component/RealLogin/RealLoginContainer.tsx","AppContainer.tsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","localStorage","getItem","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","MovieApi","get","response","data","catch","Promise","reject","userid","movieid","FormData","append","String","method","url","pk","setItem","mid","movie","star","res","text","number","console","log","arr","Object","values","window","keys","item","Number","user","password","email","file","csrftoken","formData","id","err","movie_id","rid","delete","initialState","movieBin","currentMovie","isFetching","genres","rating","reviews","results","genresCheck","movieId","nameReviews","textReviews","numberState","count","LOAD_MOVIE","LOAD_CURRENT_MOVIE","TOGGLE_FETCHING","GENRES","RATING","TEXT","MOVIEBIN","CHECKBOX","REVIEWS","NAME","REVIEWSTEXT","SETSTAR","SETMOVIEID","SETNUMBER","SETCOUNT","SETRESULTS","setMovie","type","toggleIsFetching","isFething","RatingCurrentMovie","Reviews","Star","MovieId","getCount","getResults","setMovieBinAction","getMovie","dispatch","getState","a","setMovieBin","getMovieBin","deleteMovieBin","getGenres","HomeReducer","state","action","check","isInitilized","eror","INITIALZED","EROR","erorAction","AppReducer","isAuthorized","username","token","tokenRefresh","profile","userId","LOGIN","TOKEN","PROFILE","AUTHORIZED","USERID","LoginAction","TokenAction","ProfileAction","AuthorizedAction","is","ProfileThunk","ISUserThunk","LoginReducer","reducers","combineReducers","homePage","authPage","app","store","createStore","applyMiddleware","thunkMiddleware","OwlDemo","props","slidesPerPage","animationSpeed","offset","Array","from","this","map","m","style","cursor","userSelect","marginTop","height","src","poster","Component","Home","React","memo","movieResults","movieCount","className","marginLeft","to","marginRight","alt","width","zIndex","icon","faPlayCircle","title","marginBottom","HomeContainer","PureComponent","connect","Footer","background","placeholder","required","href","faVk","faInstagramSquare","faTwitter","faYoutube","isAuth","SearchMovie","timeout","initialValues","searchText","validate","onSubmit","setSubmitting","searchTextCut","str","ch","start","end","JSON","stringify","searchMovie","isSubmitting","onChange","e","target","value","clearTimeout","setTimeout","FormReviews","useSelector","ReviewsText","onClick","setReviews","disabled","Header","request","code","arrGenres","htmlFor","g","fontSize","checked","assign","FilterMovie","opacity","SearchText","removeItem","userPhotos","position","HeaderContainer","Check","SetNumber","userRiviewsId","MovieDetail","follow","useDispatch","history","useHistory","users","paddingLeft","paddingTop","description","s","ratingValue","setRating","color","size","year","budget","u","classNames","push","r","data-id","wordBreak","deleteReviews","MovieDetailContainer","getCurrentMovie","match","params","getRating","getReviews","Name","Text","withRouter","Login","aria-describedby","avatar","files","multiple","LoginThunk","goBack","LoginContainer","access","refresh","Bin","useEffect","movies","moviePoster","App","exact","path","component","render","Loader","viewBox","cx","cy","fill","stroke","strokeWidth","RealLogin","handleClick","LoginRealThunk","RealLoginContainer","AppContainer","initThunk","isAxiosError","promise","promise2","promise1","promise4","all","success","error","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6fa260a3.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios, {AxiosResponse} from \"axios\";\r\nimport {currentMovieType, movieType} from \"../redux/HomeReducer\";\r\nimport {dataTokenType} from \"../type/types\";\r\nimport {reviewsType} from \"../component/movieDetail/MovieDetail\";\r\n\r\nexport type movieBinType = Array<{ id: number, user: number, moviePoster: string }>\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:8000/api-auth/',\r\n    headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n    }\r\n});\r\nexport type isUserType = {\r\n    isUser: boolean\r\n}\r\n\r\nfunction getCookie(name: string) {\r\n    let cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return cookieValue;\r\n}\r\n\r\nexport const MovieApi = {\r\n    getMovie() {\r\n        return instance.get(`movie`)\r\n            .then((response: AxiosResponse<movieType>) => {\r\n                return response.data;\r\n            })\r\n            .catch(() => {\r\n                return Promise.reject('oh, no!');\r\n            })\r\n    },\r\n    setMovieBin(userid: string, movieid: string) {\r\n        var data = new FormData();\r\n        data.append('userid', String(userid))\r\n        data.append('movieid', String(movieid))\r\n        return axios({\r\n            method: \"POST\",\r\n            url: `http://localhost:8000/api-auth/moviebin/`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n            },\r\n            data: data\r\n        }).then((data) => {\r\n            return data.data\r\n        })\r\n    },\r\n    getGenres() {\r\n        return instance.get(`genres`)\r\n            .then((response) => {\r\n                return response.data\r\n            })\r\n    },\r\n    getMovieBin() {\r\n        return instance.get(`moviebin/`)\r\n            .then((response) => {\r\n\r\n                return response.data\r\n            })\r\n    },\r\n    getDetailMovie(pk: number) {\r\n        return instance.get(`movie/${pk}`)\r\n            .then((response: AxiosResponse<currentMovieType>) => {\r\n                //@ts-ignore\r\n                localStorage.setItem('mid', response.data.mid)\r\n                return response.data.movie\r\n            })\r\n    },\r\n    getRating(pk: number) {\r\n        return instance.get(`rating/get/${pk}`, {\r\n            headers: {\r\n                'Content-Type': 'application / x-www-form-urlencoded'\r\n            }\r\n        })\r\n            .then((response) => {\r\n                return response.data\r\n            })\r\n    },\r\n    setRating(star: number, movie: number) {\r\n        return axios({\r\n            method: \"POST\",\r\n            url: \"http://localhost:8000/api-auth/rating\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: {\r\n                star: star,\r\n                movie: movie\r\n\r\n            }\r\n        })\r\n            .then(res => {\r\n\r\n                return res.data\r\n\r\n            })\r\n\r\n    },\r\n    searchMovie(text: string) {\r\n        return instance.get(`m?search=${text}`)\r\n            .then((res) => {\r\n\r\n                return res.data\r\n            })\r\n    },\r\n    GenreMovie(number: any) {\r\n        /*тут приходит по одному элементу мб тут сдклать один обьект*/\r\n        console.log(number)\r\n        let arr = Object.values(number)\r\n        console.log(arr)\r\n        window.url = 'moviefilter?'\r\n        if (arr.length) {\r\n            let str = `${number[Object.keys(number)[0]]}`\r\n            window.url += `${number[Object.keys(number)[0]]}`.substring(1)\r\n            console.log(number[Object.keys(number)[0]])\r\n        }\r\n        for (let item in number) {\r\n            window.url += number[item]\r\n        }\r\n        let url = window.url\r\n        console.log(url)\r\n        return instance.get(`${url}`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n\r\n    },\r\n    CreateReviews(text: string, movie: number | string) {\r\n        return axios({\r\n            method: \"POST\",\r\n            url: `http://localhost:8000/api-auth/reviews`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n            },\r\n            data: {\r\n                text: String(text),\r\n                movie: Number(movie),\r\n                name: String(localStorage.getItem(\"name\")),\r\n                user: Number(localStorage.getItem(\"userId\"))\r\n            }\r\n        })\r\n\r\n            .then(res => {\r\n\r\n                return res.data\r\n\r\n            })\r\n    },\r\n    getReviews(movieid: number) {\r\n\r\n        return instance.get(`reviews/${movieid}`)\r\n            .then((res) => {\r\n                return res.data\r\n            })\r\n\r\n    },\r\n    Login(name: string | null, password: string, email: string, file: any) {\r\n        const csrftoken = getCookie('csrftoken');\r\n\r\n        let formData = new FormData()\r\n        formData.append('userPhotos', file)\r\n        formData.append('password', password)\r\n        formData.append('email', email)\r\n\r\n        formData.append('name', <string>name)\r\n\r\n        return axios({\r\n            withCredentials: true,\r\n            url: 'http://localhost:8000/auth/users/',\r\n            method: 'POST',\r\n            data: formData,\r\n            headers: {\r\n                'X-CSRFToken': csrftoken\r\n            }\r\n        }).then((res) => {\r\n            return res.data\r\n        })\r\n\r\n\r\n    },\r\n    Token(password: string, email: string) {\r\n        const csrftoken = getCookie('csrftoken');\r\n\r\n        let formData = new FormData()\r\n        formData.append('password', password)\r\n        formData.append('email', email)\r\n\r\n        return axios({\r\n            withCredentials: true,\r\n            url: 'http://localhost:8000/auth/jwt/create',\r\n            method: 'POST',\r\n            data: formData,\r\n            headers: {\r\n                'X-CSRFToken': csrftoken\r\n            }\r\n        }).then((res: AxiosResponse<dataTokenType>) => {\r\n            return res.data\r\n        })\r\n\r\n    },\r\n    userProfile() {\r\n        return axios({\r\n            withCredentials: true,\r\n            url: 'http://localhost:8000/auth/users/me/',\r\n            method: 'GET',\r\n            data: localStorage.getItem(\"name\"),\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }).then((res) => {\r\n            localStorage.setItem('userId', res.data.id)\r\n            return res.data\r\n        })\r\n            .catch((err) => {\r\n                return err\r\n            })\r\n    },\r\n\r\n    tokenRefresh() {\r\n        return axios({\r\n            withCredentials: true,\r\n            url: 'http://localhost:8000/auth/jwt/refresh', //http://localhost:8000/auth/jwt/refresh\r\n            method: 'POST',\r\n            data: {refresh: localStorage.getItem('tokenRefresh')},\r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        }).then((res: AxiosResponse<dataTokenType>) => {\r\n            localStorage.removeItem('token')\r\n            localStorage.setItem('token', res.data.access)\r\n            console.log(res.data.access)\r\n            return res.data\r\n        })\r\n            .catch((err) => {\r\n                return err\r\n            })\r\n    },\r\n    logIn(email: string) {\r\n        return axios({\r\n            withCredentials: true,\r\n            url: `http://localhost:8000/api-auth/loginuser?email=${email}`,\r\n            method: 'GET',\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            return res.data\r\n        })\r\n            .catch((err) => {\r\n                return err\r\n            })\r\n    },\r\n    userId(email: string) {\r\n        return axios({\r\n            withCredentials: true,\r\n            url: `http://localhost:8000/home/?email=${email}`,\r\n            method: 'GET',\r\n        }).then((res) => {\r\n            console.log(res.data)\r\n            return res.data\r\n        })\r\n            .catch((err) => {\r\n                return err\r\n            })\r\n    },\r\n    deleteReviews(movie_id: string, rid: string) {\r\n        let formData = new FormData()\r\n        formData.append('movie_id', String(movie_id))\r\n        formData.append('reviews_id', String(rid))\r\n        return instance.delete(`delReviews/`, {\r\n            data: formData\r\n        })\r\n            .then((res: AxiosResponse<reviewsType>) => {\r\n                return res.data\r\n            })\r\n    },\r\n    deleteMovieBin(movie_id: string) {\r\n        let formData = new FormData()\r\n        formData.append('movie_id', String(movie_id))\r\n        return instance.delete(`delMovieBin/`, {\r\n            data: formData\r\n        })\r\n            .then((res: AxiosResponse<any>) => {\r\n                return res.data\r\n            })\r\n    }\r\n}\r\n/*\r\ngetReviews(movieid:number){\r\n\r\n        return instance.get(`reviews/${movieid}`)\r\n            .then((res)=>{\r\n                return res.data\r\n            })\r\n\r\n    },\r\n* */\r\n\r\n","import {MovieApi, movieBinType} from \"../api/api\";\r\nimport {AppStateType} from \"./redux\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ActorsDirectors, reviewsType} from \"../component/movieDetail/MovieDetail\";\r\n\r\nexport type currentMovieType = {\r\n    movie?: any;\r\n    user?: any;\r\n    budget?: number\r\n    category?: string\r\n    description?: string\r\n    fees_in_usa?: number\r\n    fess_in_world?: number\r\n    tagline?: string\r\n    title?: string\r\n    url?: string\r\n    world_premiere?: string\r\n    year?: number\r\n    country?: string\r\n    draft?: boolean\r\n    directors?: any\r\n    actors?: Array<ActorsDirectors>\r\n    id?: number\r\n    genres?: any\r\n    poster?: string\r\n    reviews?: Array<reviewsType>\r\n}\r\nexport type movieType = {\r\n    budget: number\r\n    results?: any\r\n    category: string\r\n    description: string\r\n    fees_in_usa: number\r\n    fess_in_world: number\r\n    tagline: string\r\n    title: string\r\n    url: string\r\n    count?: number\r\n    world_premiere: string\r\n    year: number\r\n    country: string\r\n    draft: boolean\r\n    directors: any\r\n    actors: any\r\n    id: number\r\n    poster: string\r\n    reviews: Array<reviewsType>\r\n}\r\n\r\ntype initialStateType = {\r\n    movieBin: Array<movieBinType>\r\n    text: string,\r\n    movie: Array<movieType>,\r\n    currentMovie: currentMovieType,\r\n    isFetching: boolean,\r\n    genres: Array<any>,\r\n    rating: Array<any>,\r\n    reviews: Array<reviewsType>,\r\n    genresCheck: any,\r\n    movieId: number,\r\n    nameReviews: string | null,\r\n    textReviews: string,\r\n    star: number | null,\r\n    numberState: number\r\n    count: null | number\r\n    results: null | Array<movieType>\r\n    name: null\r\n\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    movieBin: [],\r\n    text: '',\r\n    movie: [],\r\n    currentMovie: {},\r\n    isFetching: true,\r\n    genres: [],\r\n    rating: [],\r\n    reviews: [],\r\n    results: [],\r\n    genresCheck: [],\r\n    movieId: 0,\r\n    nameReviews: '',\r\n    textReviews: '',\r\n    star: 0,\r\n    numberState: 0,\r\n    count: null,\r\n    name: null\r\n};\r\n//type initialStateType = typeof initialState\r\nconst LOAD_MOVIE = \"LOAD_MOVIE\"\r\nconst LOAD_CURRENT_MOVIE = \"LOAD_CURRENT_MOVIE\"\r\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\"\r\nconst GENRES = \"GENRES\"\r\nconst RATING = \"RATING\"\r\nconst TEXT = \"TEXT\"\r\nconst MOVIEBIN = \"MOVIEBIN\"\r\nconst CHECKBOX = \"CHECKBOX\"\r\nconst REVIEWS = \"REVIEWS\"\r\nexport const NAME = \"NAME\"\r\nconst TEXTREVIEWS = \"TEXTREVIEWS\"\r\nconst REVIEWSTEXT = \"REVIEWSTEXT\"\r\nconst SETSTAR = \"SETSTAR\"\r\nconst GETSTAR = \"GETSTAR\"\r\nconst SETMOVIEID = \"SETMOVIEID\"\r\nconst SETNUMBER = \"SETNUMBER\"\r\nconst SETCOUNT = \"SETCOUNT\"\r\nconst SETRESULTS = \"SETRESULTS\"\r\n/*сервак при пост зопросе возвращает все отзывы вклюсая толькочто добавленный*/\r\nconst HomeReducer = (state = initialState, action: ActionType): initialStateType => {\r\n    switch (action.type) {\r\n        case LOAD_MOVIE: {\r\n            return {...state, movie: action.movie}\r\n        }\r\n        case MOVIEBIN: {\r\n            return {...state, movieBin: action.movieBin}\r\n        }\r\n        case SETRESULTS: {\r\n            return {...state, results: action.results}\r\n        }\r\n        case SETCOUNT: {\r\n            return {...state, count: action.count}\r\n        }\r\n        case SETSTAR: {\r\n            return {...state, star: action.star}\r\n        }\r\n        case REVIEWS: {\r\n            return {...state, reviews: action.reviews}\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFething}\r\n        }\r\n        case GENRES: {\r\n            return {...state, genres: action.genres}\r\n        }\r\n        case LOAD_CURRENT_MOVIE: {\r\n            return {...state, currentMovie: action.currentMovie}\r\n        }\r\n        case SETNUMBER: {\r\n            return {...state, numberState: action.number}\r\n        }\r\n        case RATING: {\r\n            return {...state, rating: action.rating}\r\n        }\r\n        case SETMOVIEID: {\r\n            return {...state, movieId: action.movieId}\r\n        }\r\n        case REVIEWSTEXT: {\r\n            return {...state, textReviews: action.text}\r\n        }\r\n        case TEXT: {\r\n            return {...state, text: action.text}\r\n        }\r\n        case NAME: {\r\n            return {...state, nameReviews: action.name}\r\n        }\r\n        case CHECKBOX: {\r\n            return {...state, genresCheck: action.check}\r\n        }\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n}\r\ntype ActionType =\r\n    setMovieType\r\n    | setResultsType\r\n    | setCountType\r\n    | setGenresType\r\n    | toggleIsFetchingType\r\n    | setCurrentMovieType\r\n    | RatingCurrentMovieType\r\n    | SearchTextType\r\n    | CheckType\r\n    | ReviewsType\r\n    | SetNumberType\r\n    | MovieIdType\r\n    | StarType\r\n    | TextType\r\n    | RiviewsTextType\r\n    | NameType\r\n    | setMovieBinActionType\r\ntype setMovieBinActionType = {\r\n    type: typeof MOVIEBIN\r\n    movieBin: Array<movieBinType>\r\n}\r\ntype setMovieType = {\r\n    type: typeof LOAD_MOVIE\r\n    movie: any\r\n}\r\ntype setResultsType = {\r\n    type: typeof SETRESULTS\r\n    results: Array<movieType>\r\n}\r\ntype setCountType = {\r\n    type: typeof SETCOUNT\r\n    count: number | null\r\n}\r\ntype setGenresType = {\r\n    type: typeof GENRES\r\n    genres: any\r\n}\r\nexport type toggleIsFetchingType = {\r\n    type: typeof TOGGLE_FETCHING\r\n    isFething: boolean\r\n}\r\ntype setCurrentMovieType = {\r\n    type: typeof LOAD_CURRENT_MOVIE\r\n    currentMovie: any\r\n}\r\ntype RatingCurrentMovieType = {\r\n    type: typeof RATING\r\n    rating: any\r\n}\r\ntype SearchTextType = {\r\n    type: typeof TEXT\r\n    text: string\r\n}\r\ntype CheckType = {\r\n    type: typeof CHECKBOX\r\n    check: any\r\n}\r\ntype ReviewsType = {\r\n    type: typeof REVIEWS\r\n    reviews: any\r\n}\r\nexport type NameType = {\r\n    type: typeof NAME\r\n    name: string\r\n}\r\nexport type TextType = {\r\n    type: typeof TEXTREVIEWS\r\n    text: string\r\n}\r\ntype RiviewsTextType = {\r\n    type: typeof REVIEWSTEXT\r\n    text: string;\r\n}\r\ntype StarType = {\r\n    type: typeof SETSTAR\r\n    star: number\r\n}\r\ntype MovieIdType = {\r\n    type: typeof SETMOVIEID\r\n    movieId: number\r\n}\r\ntype SetNumberType = {\r\n    type: typeof SETNUMBER\r\n    number: number\r\n}\r\nexport const setMovie = (movie: any): setMovieType => ({type: LOAD_MOVIE, movie})\r\nexport const setGenres = (genres: any): setGenresType => ({type: GENRES, genres})\r\nexport const toggleIsFetching = (isFething: boolean): toggleIsFetchingType => ({type: TOGGLE_FETCHING, isFething})\r\nexport const setCurrentMovie = (currentMovie: any): setCurrentMovieType => ({type: LOAD_CURRENT_MOVIE, currentMovie})\r\nexport const RatingCurrentMovie = (rating: any): RatingCurrentMovieType => ({type: RATING, rating})\r\nexport const SearchText = (text: string): SearchTextType => ({type: TEXT, text})\r\nexport const Check = (check: any): CheckType => ({type: CHECKBOX, check})\r\nexport const Reviews = (reviews: any): ReviewsType => ({type: REVIEWS, reviews})\r\nexport const Name = (name: string): NameType => ({type: NAME, name})\r\nexport const Text = (text: string): TextType => ({type: TEXTREVIEWS, text})\r\nexport const ReviewsText = (text: string): RiviewsTextType => ({type: REVIEWSTEXT, text})\r\nexport const Star = (star: number): StarType => ({type: SETSTAR, star})\r\nexport const MovieId = (movieId: number): MovieIdType => ({type: SETMOVIEID, movieId})\r\nexport const SetNumber = (number: number): SetNumberType => ({type: SETNUMBER, number})\r\nexport const getCount = (count: number): setCountType => ({type: SETCOUNT, count})\r\nexport const getResults = (results: Array<movieType>): setResultsType => ({type: SETRESULTS, results})\r\nexport const setMovieBinAction = (movieBin: Array<movieBinType>): setMovieBinActionType => ({type: MOVIEBIN, movieBin})\r\n\r\nexport type GetStateType = () => AppStateType\r\n\r\nexport const getMovie = function () {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.getMovie().then((data: any) => {\r\n            dispatch(setMovie(data));\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n    }\r\n}\r\nexport const setReviews = function (text: string, movie: string | number) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.CreateReviews(text, movie).then((data: any) => {\r\n            dispatch(Reviews(data));\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n    }\r\n}\r\nexport const setMovieBin = function (userid: string | null, movieid: number | undefined) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        // @ts-ignore\r\n        await MovieApi.setMovieBin(userid, movieid).then((data: Array<movieBinType>) => {\r\n            dispatch(toggleIsFetching(true));\r\n            dispatch(setMovieBinAction(data));\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n    }\r\n}\r\nexport const getMovieBin = function () {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.getMovieBin().then((data: Array<movieBinType>) => {\r\n            dispatch(toggleIsFetching(true));\r\n            dispatch(setMovieBinAction(data));\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n    }\r\n}\r\nexport const deleteMovieBin = function (movie_id: string) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.deleteMovieBin(movie_id).then((data: Array<any>) => {\r\n            dispatch(toggleIsFetching(true));\r\n            dispatch(setMovieBinAction(data));\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n    }\r\n}\r\n/*export const getMovie = async (dispatch) => {\r\n\r\n\r\n    await MovieApi.getMovie().then(data => {\r\n\r\n\r\n            dispatch(setMovie(data));\r\n            dispatch(toggleIsFetching(false));\r\n        });\r\n    }*/\r\nexport const searchMovie = function (text: string) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.searchMovie(text).then((data: any) => {\r\n            dispatch(setMovie(data));\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(getCount(data.count))\r\n            dispatch(getResults(data.results))\r\n        })\r\n    }\r\n}\r\nexport const FilterMovie = function (number: any) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.GenreMovie(number).then((data: any) => {\r\n            dispatch(setMovie(data));\r\n            dispatch(getCount(data.count))\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(getResults(data.results))\r\n        })\r\n    }\r\n}\r\nexport const getGenres = () => {\r\n    return async (dispatch: Dispatch<ActionType>, getState: GetStateType) => {\r\n\r\n\r\n        await MovieApi.getGenres().then((data: any) => {\r\n\r\n\r\n            dispatch(setGenres(data));\r\n            dispatch(toggleIsFetching(false));\r\n        });\r\n    }\r\n}\r\n\r\nexport const getCurrentMovie = function (pk: number) {\r\n\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n\r\n        await MovieApi.getDetailMovie(pk).then((data: any) => {\r\n\r\n\r\n            dispatch(setCurrentMovie(data));\r\n            dispatch(MovieId(data.id));\r\n\r\n\r\n        });\r\n        await MovieApi.getRating(pk).then((data: any) => {\r\n            dispatch(RatingCurrentMovie(data))\r\n            dispatch(Star(data))\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n\r\n    }\r\n}\r\nexport const getRating = function (pk: number) {\r\n\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.getRating(pk).then((data: any) => {\r\n            dispatch(Star(data))\r\n            dispatch(RatingCurrentMovie(data))\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n\r\n    }\r\n}\r\nexport const setRating = function (star: number, movie: number) {\r\n\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.setRating(star, movie).then((data: any) => {\r\n            dispatch(RatingCurrentMovie(data))\r\n            dispatch(Star(data))\r\n            dispatch(toggleIsFetching(false));\r\n        })\r\n\r\n    }\r\n}\r\nexport const getReviews = function (pk: number) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.getReviews(pk).then((data: any) => {\r\n            dispatch(Reviews(data))\r\n            dispatch(toggleIsFetching(false));\r\n\r\n        })\r\n\r\n    }\r\n}\r\nexport const deleteReviews = function (movie_id: string, rid:string) {\r\n    return async function (dispatch: Dispatch<ActionType>, getState: GetStateType) {\r\n        await MovieApi.deleteReviews(movie_id, rid).then((data: any) => {\r\n            dispatch(Reviews(data))\r\n            dispatch(toggleIsFetching(false));\r\n\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default HomeReducer","import {getGenres, getMovie, GetStateType, toggleIsFetchingType} from \"./HomeReducer\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ISUserThunk, ProfileThunk} from \"./AuthReducer\";\r\n\r\ntype initialStateType = {\r\n    isInitilized: boolean\r\n    eror: boolean\r\n}\r\n\r\nlet initialState: initialStateType = {\r\n    isInitilized: false,\r\n    eror: false\r\n}\r\n\r\n\r\nexport const INITIALZED = \"INITIALZED\"\r\nexport const EROR = \"EROR\"\r\n\r\ntype ActionInitType = {\r\n    type: typeof INITIALZED\r\n    //isInitial: boolean\r\n}\r\ntype ActionErorType = {\r\n    type: typeof EROR\r\n    eror: boolean\r\n}\r\n\r\ntype getMovieType = typeof getMovie\r\n\r\ntype ActionType = ActionInitType | toggleIsFetchingType | ActionErorType\r\n\r\n\r\n\r\nconst AppReducer = (state = initialState, action: ActionType):initialStateType => {/*InitialStateType*/\r\n    switch(action.type) {\r\n        case INITIALZED: {\r\n            return {...state, isInitilized: true}\r\n        }\r\n        case EROR: {\r\n            return {...state, eror: true}\r\n        }\r\n\r\n        default:\r\n            return state\r\n\r\n\r\n    }}\r\n\r\nlet initAction = ()=>({type: INITIALZED})\r\nexport let erorAction = (eror: boolean): ActionErorType=>({type: EROR, eror})\r\nexport const initThunk = function (){\r\n    return async function (dispatch:Dispatch<any>, getState:GetStateType){\r\n        var promise = dispatch(getMovie)\r\n        var promise2 = dispatch(getGenres)\r\n        var promise1 = dispatch(ProfileThunk)\r\n        var promise4 = dispatch(ISUserThunk)\r\n        Promise.all([promise, promise1, promise2, promise4]).then(()=>{\r\n            setTimeout(()=>{ dispatch(initAction())},600)\r\n\r\n        })\r\n        Promise.reject([promise1]).then(function(success) {\r\n            // не вызывается\r\n        }, function(error) {\r\n           dispatch(erorAction(true))\r\n        });\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default AppReducer\r\n","import {MovieApi} from \"../api/api\";\r\nimport {GetStateType, toggleIsFetching, toggleIsFetchingType} from \"./HomeReducer\";\r\nimport {dataLoginType, dataTokenType, initialStateType, profileType} from \"../type/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {erorAction} from \"./AppReducer\";\r\n\r\n\r\nlet initialState: initialStateType = {\r\n    isAuthorized: false,\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n    file:'',\r\n    token: null,\r\n    tokenRefresh: null,\r\n    profile: [],\r\n    userId: null,\r\n}\r\n/*\r\nэто для homereducer для мувиков\r\n* let initialState = {\r\n    userId: null as (number | null),\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null// if null, then captcha is not required\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n* */\r\nexport const LOGIN = \"LOGIN\"\r\nexport const TOKEN = \"TOKEN\"\r\nexport const PROFILE = \"PROFILE\"\r\nexport const AUTHORIZED = \"AUTHORIZED\"\r\nexport const USERID = \"USERID\"\r\n\r\ntype ActionType = LoginActionType | TokenActionType | ProfileActionType | AuthorizedActionType | setUserIdType | toggleIsFetchingType\r\n\r\ntype LoginActionType = {\r\n    type: typeof LOGIN,\r\n    username: string | null,\r\n    password: string | null,\r\n    email: string | null,\r\n    file: null | any,\r\n\r\n}\r\ntype TokenActionType = {\r\n    type: typeof TOKEN,\r\n    token: string | null,\r\n    tokenRefresh: string | null,\r\n\r\n}\r\ntype ProfileActionType = {\r\n    type: typeof PROFILE,\r\n    profile: any,\r\n\r\n}\r\ntype AuthorizedActionType = {\r\n    type: typeof AUTHORIZED,\r\n    is: boolean,\r\n\r\n}\r\ntype setUserIdType = {\r\n    type: typeof USERID,\r\n    userId: number,\r\n\r\n}\r\nconst LoginReducer = (state = initialState, action: any):initialStateType => {/*InitialStateType*/\r\n    switch(action.type) {\r\n        case LOGIN: {\r\n            return {...state, username: action.username, password: action.password, email: action.email, file: action.file}\r\n        }\r\n        case TOKEN: {\r\n            return {...state, token: action.token, tokenRefresh: action.tokenRefresh}\r\n        }\r\n        case PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case AUTHORIZED: {\r\n            return {...state, isAuthorized: action.is}\r\n        }\r\n        case USERID: {\r\n            return {...state, userId: action.userId}\r\n        }\r\n        default:\r\n            return state\r\n\r\n\r\n    }}\r\nexport const LoginAction = (username: string | null, password: string | null, email: string | null, file: any):LoginActionType => ({type: LOGIN, username, password, email, file})\r\nexport const TokenAction = (token:string | null, tokenRefresh:string | null):TokenActionType => ({type: TOKEN, token, tokenRefresh})\r\nexport const ProfileAction = (profile:profileType):ProfileActionType => ({type: PROFILE, profile}) //Array<customtype>\r\nexport const AuthorizedAction = (is:boolean):AuthorizedActionType => ({type: AUTHORIZED, is})\r\nexport const setUserId = (userId:number):setUserIdType => ({type: USERID, userId})\r\n\r\nexport const LoginThunk = function (username:string | null, password:string, email:string, file:any){\r\n    return async function (dispatch:Dispatch<ActionType>, getState:GetStateType){\r\n        dispatch(toggleIsFetching(true))\r\n        await MovieApi.Login(username, password, email, file).then((data:dataLoginType) => {\r\n            dispatch(LoginAction(data.name, password, data.email, data.userPhotos));\r\n            localStorage.setItem('name', data.name);\r\n            if(localStorage.getItem('token')){\r\n                // @ts-ignore\r\n                dispatch(erorAction(false))\r\n            }\r\n\r\n\r\n\r\n        })\r\n        await MovieApi.Token(password, email).then((data: dataTokenType) => {\r\n            dispatch(TokenAction(data.access, data.refresh))\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('tokenRefresh')\r\n            localStorage.setItem('token', data.access)\r\n            localStorage.setItem('tokenRefresh', data.refresh)\r\n        })\r\n        await MovieApi.userProfile().then((data: profileType) => {\r\n            dispatch(ProfileAction(data));\r\n        })\r\n        /*await MovieApi.userId(email).then((data: any) => {\r\n            dispatch(setUserId(data[0].id));\r\n            console.log(data[0].id)\r\n            localStorage.setItem('userId', data[0].id)\r\n            dispatch(toggleIsFetching(false))\r\n        })*/\r\n    }\r\n}\r\nexport const ProfileThunk = function (){\r\n    return async function (dispatch:Dispatch<ActionType>, getState:GetStateType){\r\n        await MovieApi.userProfile().then((data: any) => {\r\n            dispatch(ProfileAction(data));\r\n        })\r\n    }\r\n}\r\nexport const ISUserThunk = function (){\r\n    return function (dispatch:Dispatch<ActionType>, getState:GetStateType){\r\n            dispatch(AuthorizedAction(true));\r\n\r\n    }\r\n}\r\nexport const LoginRealThunk = function (email:string, password: string, name:string){\r\n    return async function (dispatch:Dispatch<ActionType>, getState:GetStateType){\r\n        await MovieApi.Token(password, email).then((data: dataTokenType) => {\r\n            dispatch(TokenAction(data.access, data.refresh));\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('tokenRefresh');\r\n            localStorage.setItem('token', data.access);\r\n            localStorage.setItem('tokenRefresh', data.refresh);\r\n\r\n                // @ts-ignore\r\n                dispatch(erorAction(false))\r\n\r\n        })\r\n        /*await MovieApi.logIn(email).then(data => {\r\n            dispatch(ProfileAction(data));\r\n        })*/\r\n        await MovieApi.userProfile().then((data:profileType) => {\r\n            localStorage.setItem(\"name\", <string>data.name)\r\n            dispatch(ProfileAction(data));\r\n        })\r\n      /*  await MovieApi.userId(email).then((data: any) => {\r\n            dispatch(setUserId(data[0].id));\r\n            console.log(data[0].id)\r\n            localStorage.removeItem('userId')\r\n            localStorage.setItem('userId', data[0].id)\r\n        })*/\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default LoginReducer\r\n","\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport HomeReducer from './HomeReducer'\r\n//import { reducer as formReducer } from 'redux-form'\r\nimport LoginReducer from \"./AuthReducer\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    homePage: HomeReducer,\r\n    authPage: LoginReducer,\r\n    app: AppReducer\r\n    //form: formReducer\r\n\r\n});\r\n\r\ntype reducersType = typeof reducers\r\nexport type AppStateType = ReturnType<reducersType>\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n\r\nexport default store;","import React,{Component} from 'react'\r\n\r\nimport Carousel, {CarouselProps} from '@brainhubeu/react-carousel'\r\n\r\nimport '@brainhubeu/react-carousel/lib/style.css'\r\nimport {movieType} from \"../../redux/HomeReducer\";\r\n//import logo from '../Terminator_Genisys.png'\r\ntype PropsType = {\r\n    movie: Array<movieType>\r\n}\r\nexport class OwlDemo extends Component<PropsType, CarouselProps> {\r\n    constructor(props: PropsType & CarouselProps) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return(<><Carousel\r\n                // @ts-ignore\r\n                slidesPerPage={3}\r\n                animationSpeed={125}\r\n                offset={-40}\r\n            >\r\n                {Array.from(this.props.movie).map((m, i)=>{\r\n                   return <img key={i} style={{cursor: \"grab\", userSelect:\"none\", marginTop:65+'px'}}\r\n                               height={450+'px'} src={`http://localhost:8000${m.poster}`} />\r\n\r\n\r\n\r\n                })}</Carousel></>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default OwlDemo","import 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../../style/style.css'\r\nimport OwlDemo from '../Carousel/Carousel'\r\nimport React from \"react\"\r\nimport {Link,NavLink, Route, Switch} from \"react-router-dom\"\r\n//import {faPlayCircle} from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faYoutube} from \"@fortawesome/free-brands-svg-icons\";\r\nimport Particless from \"../../particlesComponent/Partikles\";\r\nimport {currentMovieType, movieType} from \"../../redux/HomeReducer\";\r\nimport {faPlayCircle} from \"@fortawesome/free-solid-svg-icons/faPlayCircle\";\r\n\r\n\r\ntype PropsType = {\r\n    currentMovie: any\r\n    movie: Array<movieType>\r\n    isFetching: boolean\r\n    movieResults: any\r\n    text: string\r\n    movieCount:number | null\r\n}\r\n\r\nlet Home:React.FC<PropsType> = React.memo(({movie, movieResults, movieCount, isFetching}) => {\r\n\r\n/*\r\n* <div className=\"cardowner col-lg-2 col-sm-6 col-md-4 \" key={i}>\r\n                                <div className=\"d-flex\" style={{marginTop: 20+'px', marginRight: 15+'px'}}>\r\n                                    <Link to={`movie/${m.id}`}>\r\n                                    <div className=\"cards d-flex \" >\r\n                                        <img className=\"cards__item__img \" src={m.url} />\r\n                                        <p className=\"cards__item__under__img__text__img\">{m.title}</p>\r\n                                        <p className=\"cards__item__under__img__text\">{m.title}</p>\r\n                                    </div>\r\n                                    </Link>\r\n\r\nstyle={{flexDirection: 'row', height:'200px', width:'300px', justifyContent: 'center'}}\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n* */\r\n    /*\r\n     надо сделать разбивку на компоненты мовидетайл, мовисерач, мовифилтер, и отабражать партиклес в мовидетайл\r\n\r\n     */\r\n    return (\r\n\r\n        <section className=\"movielist\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <br/>\r\n                        <br/>\r\n                            <br/>\r\n\r\n                    {<OwlDemo movie={movie}/>}\r\n\r\n                    {\r\n\r\n                        Array.from(movie).map((m:movieType, i:number)=>{\r\n                            return<div style={{marginLeft: '0px'}} className={\"ml-5\"}>\r\n\r\n                                <Link to={`movie/${m.id}`}>\r\n                                <div className=\"row d-flex position-relative listMovie\" style={{marginRight: '0'}}>\r\n                                    <div className=\"col justify-content-center \">\r\n                                        <div className=\"container1\">\r\n                                            <img src={`http://localhost:8000${m.poster}`} alt=\"Avatar\" width={'300px'} height={'400px'} className=\"image\" style={{marginTop: '10px',\r\n                                                marginLeft:'10px', zIndex: 999999999999999999\r\n                                            }} />\r\n                                                <div className=\"middle\">\r\n                                                    <div className=\"text\"> </div><FontAwesomeIcon className={\"iconPlay\"} icon={faPlayCircle} />\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                </Link>\r\n                           </div>\r\n                        })  }\r\n\r\n\r\n                    {/*props.movie.results ? <OwlDemo movie={Array.from(props.movie.results)} isFetching={props.isFetching}/> : console.log(\"search not\")*/}\r\n\r\n                    {\r\n                        movieResults ?\r\n                        Array.from(movieResults).map((m:any, i:number)=>{\r\n                            console.log(m.title)\r\n                            return <>\r\n\r\n                                <div style={{marginLeft: '0px'}} className={\"ml-5\"}>\r\n                                    <Link to={`movie/${m.id}`}>\r\n                                        <div className=\"row d-flex position-relative listMovie\" style={{marginRight: '0'}}>\r\n                                            <div className=\"col justify-content-center \">\r\n                                                <div className=\"container1\">\r\n                                                    <img src={`${m.poster}`} alt=\"Avatar\" width={'300px'} height={'400px'} className=\"image\" style={{marginTop: '10px',\r\n                                                        marginLeft:'10px', zIndex: 999999999999999999, marginBottom: \"20%\"\r\n                                                    }} />\r\n                                                    <div className=\"middle\">\r\n                                                        <div className=\"text\"> </div><FontAwesomeIcon className={\"iconPlay\"} icon={faPlayCircle} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </Link>\r\n                                </div></>\r\n\r\n\r\n\r\n\r\n                        }): console.log(\"search not\")  }\r\n                    {movieCount == 0 &&\r\n\r\n\r\n                      <strong style={{marginBottom: 64.2 + \"%\", marginLeft: 20+\"%\"}}>по вашему запросу ничего не найдено</strong>\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n        </section>\r\n\r\n\r\n    )\r\n})\r\nexport default Home","import React from 'react'\r\nimport Home from \"./Home\";\r\nimport {connect} from 'react-redux';\r\nimport {getMovie, toggleIsFetching, movieType, currentMovieType} from '../../redux/HomeReducer'\r\nimport {AppStateType} from \"../../redux/redux\";\r\nimport {ISUserThunk} from \"../../redux/AuthReducer\";\r\n\r\n\r\ntype mapDispatchToProps = {\r\n    getMovie: ()=>void,\r\n    ISUserThunk: ()=>void\r\n}\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\n/*type PropsType = {\r\n    getMovie: ()=>void\r\n    isFetching: boolean\r\n    movie: Array<movieType>\r\n    currentMovie: any | null\r\n    text: string\r\n    results: Array<movieType>\r\n    count:number | null\r\n}*/\r\n/*сделать так чтобы все данные были в стейте this.props.movie.count = this.props.count\r\n* type PropsType = MapPropsType & mapDispatchToProps\r\n* и по сути ероров не будет*/\r\n\r\n//type PropsType = MapPropsType & mapDispatchToProps\r\ntype PropsType = MapPropsType & mapDispatchToProps\r\n\r\n\r\nclass HomeContainer extends React.PureComponent<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getMovie()\r\n        if(localStorage.getItem('token')){\r\n            this.props.ISUserThunk()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? console.log('') : <Home movie={this.props.movie}\r\n                                                                isFetching={this.props.isFetching}\r\n\r\n                                                                currentMovie={this.props.currentMovie}\r\n                                                                text={this.props.text}\r\n\r\n                                                                movieResults={this.props.results}\r\n                                                                movieCount={this.props.count}\r\n\r\n\r\n            /> }\r\n\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state:AppStateType) => {\r\n    return {\r\n        movie: state.homePage.movie,\r\n        currentMovie: state.homePage.currentMovie,\r\n        isFetching: state.homePage.isFetching,\r\n        text: state.homePage.text,\r\n        results: state.homePage.results,\r\n        count: state.homePage.count,\r\n    }\r\n}\r\n/*let mapDispatchToPops = (dispatch) => {\r\n    return{\r\n        getMovie:()=>{dispatch(getMovie)}\r\n    }\r\n}*/\r\n\r\n\r\nexport default connect<MapPropsType,mapDispatchToProps,PropsType, AppStateType>(mapStateToProps,\r\n    {getMovie, ISUserThunk})(HomeContainer);","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../style/style.css'\r\nimport { faInstagramSquare } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faYoutube } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faVk } from \"@fortawesome/free-brands-svg-icons\";\r\nimport React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n\r\n\r\n\r\nlet Footer = React.memo(() => {\r\n    return (\r\n        <footer className=\"col-12 d-flex mw-100 position-sticky\" style={{marginLeft: 0+'px', marginTop: 29+'%', height: 300+'px', marginRight: 0+'px',\r\n            background: \"#A99BFF\"}}>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"form col-12\">\r\n                        <form>\r\n                            <div className=\"form-row  \">\r\n                                <div className=\"col-sm col-md col-lg d-flex form__item\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\"/>\r\n                                </div>\r\n                                <div className=\"w-100\"> </div>\r\n                                <div className=\"col-sm col-md col-lg d-flex form__item\">\r\n                                    <input style={{width: 100+\"%\"}} type=\"text\" className=\"form-control\" placeholder=\"Last name\"/>\r\n                                </div>\r\n                                <div className=\"w-100\"> </div>\r\n                                <div className=\"col-sm col-md col-lg d-flex form__item\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Email\" required={true}/>\r\n                                </div>\r\n                                <div className=\"w-100\"> </div>\r\n                                <div className=\"col-lg-12\">\r\n                                    <button type=\"submit\" className=\"btn btn-primary col-lg form__item\">send mail\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"icons col-lg\">\r\n                    <a href=\"#\"><FontAwesomeIcon icon={faVk} /></a>\r\n                    <a href=\"#\"><FontAwesomeIcon icon={faInstagramSquare} /></a>\r\n                    <a href=\"#\"><FontAwesomeIcon icon={faTwitter} /></a>\r\n                    <a href=\"#\"><FontAwesomeIcon icon={faYoutube} /></a>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n                <br/>\r\n        </footer>\r\n    );\r\n})\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport {Field, Form, Formik} from 'formik';\r\n\r\n\r\nfunction trim(str: any, ch: any) {\r\n    var start = 0,\r\n        end = str.length;\r\n\r\n    while(start < end && str[start] === ch)\r\n        ++start;\r\n\r\n    while(end > start && str[end - 1] === ch)\r\n        --end;\r\n\r\n    return (start > 0 || end < str.length) ? str.substring(start, end) : str;\r\n}\r\ntype SearchMoviePropsType = {\r\n    SearchText: (text: string) => void\r\n    searchMovie: (text: string) => void\r\n    text: string\r\n}\r\nconst SearchMovie = React.memo((props: SearchMoviePropsType) => {\r\n    let timeout: any;\r\n    const onChange = (text :any) => {\r\n        if (timeout) clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n            props.searchMovie(text)\r\n\r\n        }, 300);\r\n    };\r\n    let submit = (values:any, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        let searchTextCut = trim(JSON.stringify(String(values.searchText)), '\"')\r\n        props.searchMovie(searchTextCut)\r\n        setSubmitting(false)\r\n    }\r\n    //useDebouncedSearch(submit)\r\n  return (<>\r\n        <div className=\"nav col-lg-5 ml-auto \">\r\n            <nav>\r\n                <ul className=\"nav__items d-flex justify-content-center \">\r\n\r\n                    <div className=\"divse col-lg-12 col-sm-12\">\r\n                        <Formik\r\n                            initialValues={{searchText: null as null | string}}\r\n                            validate={()=>({})}\r\n                            onSubmit={submit}\r\n\r\n                        >\r\n                            {({isSubmitting}) => (\r\n                                <Form>\r\n                                    <Field type=\"text\" name=\"searchText\" onChange={(e:any)=>{onChange(e.target.value)}}/>\r\n\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n\r\n\r\n                    </div>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    </>)\r\n})\r\nexport default SearchMovie","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux\";\r\n\r\ndeclare global {\r\n    interface Window { name12: any, text: string, email:string, password:string, username: any, avatar:any, url:any, textValue: any, u:any}\r\n}\r\n\r\ntype PropsType = {\r\n    setReviews: (text: string, pk: number | string)=> void\r\n    isFetching: boolean\r\n    pk: number | string\r\n    ReviewsText: (text:string)=>void\r\n    textReviews: string\r\n}\r\nlet isAuth:any;\r\nfunction FormReviews(props: PropsType) {\r\n    isAuth = useSelector((state:AppStateType) => {return state.authPage.isAuthorized})\r\n    let click = (text:string) => {\r\n        props.setReviews(text, props.pk)\r\n        props.ReviewsText('')\r\n\r\n    }\r\n    console.log(props.isFetching)\r\n\r\n    return (<>\r\n            {isAuth ?\r\n            <>\r\n                <textarea className={\"textarea\"}\r\n                          name={\"text\"}\r\n\r\n                          placeholder=\"text\" onChange={(e) => {\r\n\r\n                    props.ReviewsText(e.target.value)\r\n\r\n\r\n                }} value={String(props.textReviews)} /> <br/>\r\n\r\n                <button className={'btn btn-success'} onClick={() => {\r\n\r\n                    click(props.textReviews)\r\n\r\n                }} style={{marginLeft: 230 + 'px'}} disabled={props.isFetching} type={\"submit\"}>Submit\r\n                </button>\r\n            </>\r\n                : <p> authorization </p>}\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default FormReviews\r\nexport {isAuth}","import '../../style/style.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../style/anim.css'\r\nimport React from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport SearchMovie from \"./SearchMovie\";\r\nimport {isAuth} from \"../movieDetail/FormReviews\";\r\n/*faSearch*/\r\n\r\ntype propsType = {\r\n    profile: any\r\n    FilterMovie: (number: any)=>void\r\n    isFetching: boolean\r\n    ProfileThunk: ()=>void\r\n    SearchText: (test: string)=>void\r\n    genres: Array<any>\r\n    text: string\r\n    check: (check: any)=>void\r\n    AuthorizedAction: (is: boolean)=>void\r\n    searchMovie: (text: string)=>void\r\n\r\n}\r\n\r\nlet Header = React.memo((props: propsType) => {\r\n\r\n    if(props.profile){\r\n    if(props.profile.request){\r\n        // значит токена нет\r\n        console.log('TOKENA NETY')\r\n        console.log(props.profile.code)\r\n        props.AuthorizedAction(false)\r\n\r\n    } else{\r\n        let token = localStorage.getItem('token')\r\n        console.log(token)\r\n        props.AuthorizedAction(true)\r\n    }}\r\n    let arrGenres: any = {}\r\n\r\n\r\n\r\n    //arrGenres.genres = null\r\n    /* сделать свой гамбургер меню,\r\n    дальше отптимизировать,добвлеть новые фичи,\r\n    писать на ts и использовать много новых технологий = ит камас*/\r\n    /*<div className=\"hamburger-menu\">\r\n                    <input id=\"menu__toggle \" type=\"checkbox\"/>\r\n                    <label className=\"menu__btn \" htmlFor=\"menu__toggle\">\r\n                        <span></span>\r\n                    </label>\r\n\r\n                    <ul className=\"menu__box \" style={{paddingTop: 60+'px'}}>\r\n\r\n                        {props.isFetching === false ? props.genres.map((g,i)=>{\r\n\r\n                            return <li key={i} style={{marginTop: 10+'px'}}><p style={{marginTop: 60 + 'px'}} className=\"menu__item\">\r\n                                <input onClick={(e)=>{\r\n                                if(e.target.checked){\r\n                                    Object.assign(arrGenres, {[g.name]: e.target.value})\r\n                                    props.check(arrGenres)\r\n                                    props.FilterMovie(arrGenres)\r\n                                }else{\r\n                                    delete arrGenres[g.name]\r\n                                }\r\n\r\n                            }} type=\"checkbox\" name=\"\"\r\n                                                                                className=\"menu__item\" value={`&genres=${g.id}`}/>{g.name}</p></li>\r\n                        }) : console.log(\"bad\")}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </ul>\r\n\r\n                </div>*/\r\n    return (\r\n\r\n        <header className=\"header \" id=\"header\">\r\n\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className={\"indexz\"}>\r\n                        <div className=\"hamburger-menu\">\r\n                            <input id=\"menu__toggle\" type=\"checkbox\"/>\r\n                            <label className=\"menu__btn\" htmlFor=\"menu__toggle\">\r\n                                <span> </span>\r\n                            </label>\r\n                            <ul className=\"menu__box\">\r\n\r\n                                {props.isFetching === false ? props.genres.map((g: any,i: number)=>{\r\n\r\n                                    return (<li key={i} style={{marginTop: 10+'px'}}><label htmlFor={g.id}><p style={{marginTop: 50 + 'px', fontSize: '25px'}} className=\"menu__item\">\r\n                                        <input onClick={(e:any)=>{\r\n\r\n                                            if(e.target.checked){\r\n\r\n                                                Object.assign(arrGenres, {[g.name]: e.target.value})\r\n                                                props.check(arrGenres)\r\n                                                props.FilterMovie(arrGenres)\r\n                                            }else{\r\n                                                delete arrGenres[g.name]\r\n                                            }\r\n/*можно чекбоксы прятать и при клике на нейм фильтрвать по нужной категории*/\r\n\r\n                                        }} type=\"radio\" name=\"flexRadioDefault\"\r\n                                               className=\"menu__item form-check-input\" id={g.id} style={{opacity: 0}} value={`&genres=${g.id}`}/>{g.name}</p></label></li>)\r\n                                }) : <p> </p>}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                   <SearchMovie text={props.text} searchMovie={props.searchMovie} SearchText={props.SearchText}/>\r\n                    <div className='col-lg-4' style={{zIndex: 9999999999999999}}>\r\n\r\n                        {props.profile ? !props.profile.request ? <><p>{props.profile.name}</p> <img width={'60px'} height={'60px'} src={props.profile.userPhotos}/><button onClick={()=>{localStorage.removeItem('token'); localStorage.removeItem(\"tokenRefresh\");localStorage.removeItem('userId'); localStorage.removeItem('name'); props.ProfileThunk()}}>logout</button></> : <><Link to={'/realLogin'}> <>login</> </Link><Link to={'/login'}> <>register</> </Link>\r\n                            {localStorage.removeItem('token')} {localStorage.removeItem('userId')} {localStorage.removeItem('name')}\r\n                            </>\r\n                        : <></>\r\n                        }\r\n\r\n\r\n                    </div>\r\n                    {isAuth ?\r\n                        <div style={{marginTop: '15px', position: 'relative'}}> <Link to='/followed'>followed movie</Link> </div>\r\n\r\n                        : <></>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n})\r\n/*\r\n* name - arsenii\r\n* email - test@gmail.com\r\n* password - qwerty123098-\r\n* */\r\nexport default Header\r\n","import Header from \"./Header\";\r\nimport React, {ReactNode} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Check, FilterMovie, getGenres, searchMovie, SearchText, SetNumber} from '../../redux/HomeReducer' //thunk\r\nimport {AuthorizedAction, ProfileThunk} from \"../../redux/AuthReducer\";\r\nimport {AppStateType} from \"../../redux/redux\";\r\n\r\ntype mapDispatchToProps = {\r\n\r\n    getGenres: ()=>void\r\n    ProfileThunk: ()=>ReactNode\r\n    searchMovie: (test: string)=>void\r\n    SearchText: (test: string)=>void\r\n    FilterMovie: (number: any)=>void\r\n    Check: (check: any)=>void\r\n    AuthorizedAction: (is: boolean)=>void\r\n    SetNumber: (number: number)=>void\r\n}\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\nexport type PropsType = MapPropsType & mapDispatchToProps\r\nclass HeaderContainer extends React.PureComponent<PropsType> {\r\n    componentDidMount() {\r\n        this.props.getGenres()\r\n        this.props.ProfileThunk()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <p>loading...</p> : <Header genres={this.props.genres}\r\n                                                                isFetching={this.props.isFetching}\r\n                                                                  SearchText={this.props.SearchText}\r\n                                                                  text={this.props.text}\r\n                                                                  searchMovie={this.props.searchMovie}\r\n                                                                  check={this.props.Check}\r\n                                                                  FilterMovie={this.props.FilterMovie}\r\n                                                                  AuthorizedAction={this.props.AuthorizedAction}\r\n                                                                  profile={this.props.profile}\r\n                                                                  ProfileThunk={this.props.ProfileThunk}\r\n\r\n\r\n\r\n\r\n\r\n            /> }\r\n\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        genres: state.homePage.genres,\r\n        isFetching: state.homePage.isFetching,\r\n        text: state.homePage.text,\r\n        genresCheck: state.homePage.genresCheck,\r\n        isAuthorized: state.authPage.isAuthorized,\r\n        profile: state.authPage.profile,\r\n    }\r\n}\r\nexport default connect<MapPropsType,mapDispatchToProps,PropsType, AppStateType>(mapStateToProps,\r\n    {getGenres, SearchText, searchMovie, Check, FilterMovie, SetNumber, AuthorizedAction, ProfileThunk})(HeaderContainer);","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../style/style.css'\r\nimport '../../style/styleDetail.css'\r\nimport React from \"react\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport {FaStar} from \"react-icons/fa\";\r\nimport FormReviews from \"./FormReviews\";\r\nimport {currentMovieType, deleteMovieBin, movieType, setMovieBin} from \"../../redux/HomeReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux\";\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nexport type reviewsType = {\r\n    name: string\r\n    text: string\r\n    movie: number\r\n    user: number\r\n    id: number | string\r\n}\r\n\r\nexport type ActorsDirectors = {\r\n    name: string\r\n    image: string\r\n    age: number\r\n    description: string\r\n}\r\n\r\ntype propsType = {\r\n    deleteReviews: (movie_id: string, rid: string)=>void\r\n    setMovieBin: (userid: number, movieid: number) => void\r\n    movie: Array<movieType>\r\n    isFetching: boolean\r\n    currentMovie: currentMovieType\r\n    getRating: (pk: number) => Promise<void>\r\n    rating: any\r\n    setReviews: (text: string, pk: number | string) => void\r\n    reviews: Array<any>\r\n    pk: number | string\r\n    Name: (name: string) => void\r\n    Text: (text: string) => void\r\n    setRating: (star: number, movie: number) => Promise<void>\r\n    star: null | number\r\n    movieId: number\r\n    isAuthorized: boolean | null\r\n    userId: number | null\r\n    ReviewsText: (text: string) => void\r\n    textReviews: string\r\n}\r\n\r\n\r\nlet userRiviewsId: any = []\r\n//@ts-ignore\r\nwindow.userRiviewsId = userRiviewsId\r\n\r\nlet MovieDetail = React.memo((props: propsType): JSX.Element => {\r\n    let movieId:any = useSelector((state:AppStateType)=>{return state.homePage.movieId})\r\n\r\n\r\n    var follow = Number(props.currentMovie.id) == Number(localStorage.getItem('mid')) ? true : false\r\n    let dispatch = useDispatch()\r\n    let history = useHistory()\r\n    const users: any = useSelector((state: AppStateType) => {\r\n        return state.homePage.movieBin\r\n    })\r\n\r\n    const isAuthorized = useSelector((state: AppStateType) => {\r\n        return state.authPage.isAuthorized\r\n    })\r\n    let arr = [1, 2, 3, 4, 5]\r\n    let star = props.star\r\n    console.log(star)\r\n    return (<>\r\n\r\n\r\n            {props.isFetching ? <></> : <>\r\n                <div style={{marginTop: 70 + 'px'}}></div>\r\n                <img style={{paddingLeft: 30 + 'px', paddingTop: 20 + 'px'}} width={430 + 'px'} height={500 + 'px'}\r\n                    //@ts-ignore\r\n                     src={`http://localhost:8000${props.currentMovie.poster}`}/>\r\n                <div className={\"cont\"}>\r\n                    <strong>title: </strong><p>{props.currentMovie.title}</p><br/>\r\n                    <strong>description: </strong><p>{props.currentMovie.description}</p><br/>\r\n                    <strong>rating: </strong><p>{arr.map((s, i) => {\r\n                    let ratingValue = i + 1\r\n                    return <>\r\n                        <label>\r\n                            <input type=\"radio\" name=\"rating\" onClick={() => {\r\n\r\n                                console.log(Number(ratingValue))\r\n                                props.setRating(Number(ratingValue), props.movieId)\r\n\r\n                            }}/>\r\n                            <FaStar\r\n                                className={\"star\"}\r\n                                color={(ratingValue < Number(star) + 1) ? \"#eac424\" : \"grey\"}\r\n                                size={20}\r\n                            />\r\n                        </label>\r\n                    </>\r\n                })}</p>\r\n                    <strong>year: </strong><p>{props.currentMovie.year}</p>\r\n                    <strong>бюджет: </strong><p>{props.currentMovie.budget}$</p>\r\n\r\n                    {Array.from(users).map((u: any, i) => {\r\n                        {\r\n                            props.currentMovie.id == Number(localStorage.getItem(\"mid\")) && props.currentMovie.user == Number(localStorage.getItem(\"userId\")) ? follow = true : follow = false\r\n                        }\r\n                        console.log(u)\r\n                        return <></>\r\n                    })}\r\n                    {isAuthorized ?\r\n                        <>\r\n                            <button type={'button'} className={classNames('btn ', { 'btn-success': follow==false,'btn-danger': follow  })} onClick={async () => {\r\n                                if(!follow){await dispatch(setMovieBin(localStorage.getItem(\"userId\"), props.currentMovie.id)); history.push('/followed')}\r\n                                else{await dispatch(deleteMovieBin(String(props.currentMovie.id))); follow=false; history.push('/followed')}\r\n\r\n                            }}>{<p  onClick={(e) => {}}>{follow ? 'delete' : 'add'}</p>}\r\n\r\n                            </button>\r\n                        </> : <></>}\r\n                </div>\r\n                <h1>Reviews</h1>\r\n                <FormReviews isFetching={props.isFetching}\r\n                             setReviews={props.setReviews} pk={props.pk} textReviews={props.textReviews}\r\n                             ReviewsText={props.ReviewsText}/>\r\n\r\n                {props.isFetching == false ? Array.from(props.reviews).map((r, i) => {\r\n\r\n\r\n                    return <div key={i}>\r\n\r\n                        <>\r\n                            <div className=\"actionBox\">\r\n                                <ul className=\"commentList\">\r\n                                    <li>\r\n                                        <div className=\"commenterImage\">\r\n                                            <img className={\"avtar\"} width={50 + 'px'} height={50 + 'px'}\r\n                                                 src=\"https://www.elmechtechnology.com/sites/all/themes/aganhost/demos/no-avatar.jpg\"/>\r\n                                        </div>\r\n                                        <div className=\"commentText\">\r\n                                            <strong className={'dataId'}\r\n                                                    data-id={r.user}>{r.name}</strong> <p\r\n                                            className=\"\" style={{wordBreak: \"break-all\"}}>{r.text}</p>\r\n\r\n\r\n                                            {r.user == Number(localStorage.getItem(\"userId\")) ? <>\r\n                                                <button onClick={() => {\r\n                                                    props.deleteReviews(movieId,r.id)\r\n                                                }}>delete\r\n                                                </button>\r\n                                            </> : <></>}\r\n\r\n\r\n                                        </div>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                            </div>\r\n                        </>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                }) : <div>loading...</div>}\r\n\r\n                <Footer/>\r\n\r\n            </>}\r\n\r\n\r\n        </>\r\n    )\r\n})\r\n\r\nexport default MovieDetail","import React, {Fragment} from 'react'\r\nimport MovieDetail from \"./MovieDetail\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    deleteReviews,\r\n    getCurrentMovie,\r\n    getGenres,\r\n    getMovieBin,\r\n    getRating,\r\n    getReviews,\r\n    MovieId,\r\n    movieType,\r\n    Name,\r\n    Reviews,\r\n    ReviewsText,\r\n    setRating,\r\n    setReviews,\r\n    Text\r\n} from '../../redux/HomeReducer'\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {AppStateType} from '../../redux/redux';\r\nimport HeaderContainer from \"../Header/HeaderContainer\";\r\n\r\ntype PathParamsType = {\r\n    pk: string\r\n}\r\ntype mapDispatchToProps = {\r\n    deleteReviews: (movie_id:string, rid:string)=>void\r\n    getMovieBin: any\r\n    getCurrentMovie: (pk: number) => Promise<void>\r\n    getGenres: ()=>void\r\n    getRating: (pk: number) => Promise<void>\r\n    getReviews: (pk:number)=>void\r\n    setReviews: (text:string, pk:number | string)=>void\r\n    setRating: (star: number, movie: number) => Promise<void>\r\n    Name: (name:string)=>void\r\n    Text: (text: string) => void\r\n    movie: Array<movieType>\r\n    ReviewsText: (text: string) => void\r\n}\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\n\r\ntype PropsType = MapPropsType & mapDispatchToProps & RouteComponentProps<PathParamsType>;\r\nclass MovieDetailContainer extends React.PureComponent<PropsType> {\r\n    constructor(props:PropsType) {\r\n        super(props);\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.getMovieBin()\r\n        this.props.getCurrentMovie(Number(this.props.match.params.pk))\r\n        this.props.getRating(Number(this.props.match.params.pk))\r\n        this.props.getReviews(Number(this.props.match.params.pk))\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching == false ? <Fragment>\r\n                {/* @ts-ignore */}\r\n                    <HeaderContainer/>\r\n                {/* @ts-ignore */}\r\n                    <MovieDetail movie={this.props.movie}\r\n                                 isFetching={this.props.isFetching}\r\n                                 //@ts-ignore\r\n                                 currentMovie={this.props.currentMovie}\r\n\r\n                                 getRating={this.props.getRating}\r\n                                 rating={this.props.rating}\r\n                                 setReviews={this.props.setReviews}\r\n                                 reviews={this.props.reviews}\r\n                                 pk={this.props.match.params.pk}\r\n                                 Name={this.props.Name}\r\n                                 Text={this.props.Text}\r\n                                 setRating={this.props.setRating}\r\n                                 star={this.props.star}\r\n                                 movieId={this.props.movieId}\r\n                                 isAuthorized={this.props.isAuthorized}\r\n                                 userId={this.props.userId}\r\n                                 ReviewsText={this.props.ReviewsText}\r\n                                 textReviews={this.props.textReviews}\r\n                                 deleteReviews={this.props.deleteReviews}\r\n                    />\r\n\r\n                </Fragment>\r\n\r\n\r\n\r\n                :console.log('')}\r\n\r\n\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        movie: state.homePage.movie,\r\n        //@ts-ignore\r\n        currentMovie: state.homePage.currentMovie,\r\n        isFetching: state.homePage.isFetching,\r\n        genres: state.homePage.genres,\r\n        rating: state.homePage.rating,\r\n        reviews: state.homePage.reviews,\r\n        nameReviews: state.homePage.name,\r\n        textReviews: state.homePage.textReviews,\r\n        star: state.homePage.star,\r\n        movieId: state.homePage.movieId,\r\n        isAuthorized: state.authPage.isAuthorized,\r\n        userId: state.authPage.userId\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter( connect(mapStateToProps,\r\n    {getCurrentMovie, MovieId, getGenres, getRating,\r\n        getReviews, Reviews, setReviews,Name, Text, ReviewsText, setRating, getMovieBin, deleteReviews})\r\n\r\n(MovieDetailContainer))","import React from 'react'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n    LoginThunk: (username:string | null, password:string, email:string, file:any)=>void\r\n    username: string | null\r\n    email: string | null\r\n    password: string | null\r\n    token: string | null\r\n    tokenRefresh: string | null\r\n}\r\n\r\nconst Login = React.memo((props: propsType)=>{\r\n    console.log(props)\r\n    const history = useHistory()\r\n\r\n    return(\r\n\r\n            <div className=\"form-group\">\r\n                <br/>\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" onChange={(e)=>{\r\n                    window.email = e.target.value\r\n                    console.log(window.email)\r\n                }} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                       placeholder=\"Enter email\"/>\r\n\r\n\r\n                <br/>\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input type=\"password\" className=\"form-control\" onChange={(e)=>{\r\n                    window.password = e.target.value\r\n                    console.log(window.email)\r\n                }} id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n\r\n                <br/>\r\n                <label htmlFor=\"exampleInputPassword1\">User name</label>\r\n                <input type=\"name\" className=\"form-control\" onChange={(e)=>{\r\n                    window.username = e.target.value\r\n                    console.log(window.email)\r\n                }} id=\"exampleInputPassword1\" placeholder=\"enter username...\"/>\r\n                <br/>\r\n                <input type={'file'} onChange={(e:any)=>{\r\n                    window.avatar = e.target.files[0]\r\n                }} multiple/>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={()=>{\r\n                props.LoginThunk(window.username, window.password, window.email, window.avatar)\r\n                console.log(props.username)\r\n                history.goBack()\r\n                /*без верифиувции емайцла но все-же пользователь становиося активным*/\r\n\r\n            }}>Submit</button></div>\r\n\r\n    )\r\n})\r\n\r\nexport default Login","import React from 'react'\r\nimport Login from \"./Login\";\r\nimport {connect} from 'react-redux';\r\nimport {LoginThunk} from \"../../redux/AuthReducer\";\r\nimport {AppStateType} from \"../../redux/redux\";\r\n\r\n//type ConnectType = MapPropsType & mapDispatchToProps & PropsType & AppStateType\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype mapDispatchToProps = {\r\n    LoginThunk: (username:string | null, password:string, email:string, file:any)=>void\r\n\r\n}\r\ntype PropsType = MapPropsType & mapDispatchToProps\r\nclass LoginContainer extends React.PureComponent<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Login\r\n                username={this.props.username}\r\n                email={this.props.email}\r\n                password={this.props.password}\r\n                //LoginAction={this.props.LoginAction}\r\n                LoginThunk={this.props.LoginThunk}\r\n                token={this.props.token}\r\n                tokenRefresh={this.props.tokenRefresh}\r\n\r\n            />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return{\r\n        username: state.authPage.username,\r\n        email: state.authPage.email,\r\n        password: state.authPage.password,\r\n        token: state.authPage.token,\r\n        tokenRefresh: state.authPage.tokenRefresh\r\n    }\r\n}\r\nexport default connect<MapPropsType,mapDispatchToProps,PropsType, AppStateType>(mapStateToProps,{LoginThunk})(LoginContainer)","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMovieBin} from '../redux/HomeReducer';\r\nimport {AppStateType} from \"../redux/redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const Bin = (props: any) => {\r\n    let dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getMovieBin())\r\n    }, [])\r\n    let movies = useSelector((state: AppStateType) => state.homePage.movieBin)\r\n    console.log(movies)\r\n    return (<>\r\n        {movies.map((m: any, i) => {\r\n            return <div>\r\n                <Link to={`movie/${m.movieid}`}>\r\n                    <img src={`http://localhost:8000${m.moviePoster}`}/>\r\n                </Link>\r\n            </div>\r\n        })}\r\n    </>)\r\n}\r\n\r\n","import './App.css';\nimport HomeContainer from './component/Home/HomeContainer'\nimport Footer from './component/Footer/Footer'\nimport HeaderContainer from \"./component/Header/HeaderContainer\";\nimport MovieDetailContainer from \"./component/movieDetail/MovieDetailContainer\";\nimport {Route, Switch} from 'react-router-dom'\nimport React, {Fragment} from 'react'\nimport LoginContainer from \"./component/Login/LoginContainer\";\nimport RealLoginContainer from \"./component/RealLogin/RealLoginContainer\";\nimport { Bin } from './bin/bin';\n\ntype propsType = {\n    isInitilized: boolean\n}\n\nlet App:any = React.memo((props: propsType) => {\n  return (\n    <div className=\"animate__animated animate__fadeIn\">\n\n            <Switch>\n                <Route exact path=\"/login\" component={LoginContainer}/>\n                <Route exact path=\"/followed\" component={Bin}/>\n                <Route exact path=\"/movie/:pk?\" component={MovieDetailContainer}/>\n                <Route exact path='/' render={() =>\n                    <Fragment>\n                       <Route path='' component={HeaderContainer}/>\n                       <Route path='' component={HomeContainer}/>\n\n\n\n                        <Footer/>\n                    </Fragment>\n                } />\n\n\n\n\n            </Switch>\n\n\n\n\n    </div>\n  );\n})\n\nexport default App;\n","import React from 'react'\r\nimport './loader.css'\r\n\r\nconst Loader:React.FC<any> = React.memo((props)=> {\r\n    return (<>\r\n        <div id=\"wrapper\">\r\n\r\n            <div className=\"profile-main-loader\">\r\n                <div className=\"loader\">\r\n                    <svg className=\"circular-loader\" viewBox=\"25 25 50 50\">\r\n                        <circle className=\"loader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"#70c542\"\r\n                                strokeWidth=\"2\"/>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </>)\r\n})\r\nexport default Loader","import React from 'react'\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {erorAction} from \"../../redux/AppReducer\";\r\nimport {Link} from 'react-router-dom'\r\n\r\ntype propsType = {\r\n    LoginRealThunk: (email:string, password:string, name:string)=>void\r\n    profile: any\r\n}\r\n\r\nconst RealLogin = React.memo((props: propsType)=>{\r\n    let history = useHistory();\r\n    let dispatch = useDispatch()\r\n    async function handleClick() {\r\n        //history.push(\"\");\r\n        await dispatch(erorAction(false))\r\n        //document.location.reload();\r\n        return (<Redirect to={'/'}/>)\r\n    }\r\n    /* можно получать профиль юзера делая запро сна users/me а не в бд\r\n    * нужно получать токен и деалть запрос на users/me\r\n    *\r\n    * */\r\n    return (<>\r\n        <div>\r\n            <input type={'email'} onChange={(e)=>{\r\n                console.log(e.target.value)\r\n                window.email = e.target.value\r\n            }} placeholder={'email'}/> <br/>\r\n            <input type={'password'} onChange={(e)=>{\r\n                console.log(e.target.value)\r\n                window.password = e.target.value\r\n            }} placeholder={'password'}/>\r\n            <input type={'text'} onChange={(e)=>{\r\n                console.log(e.target.value)\r\n                window.name = e.target.value\r\n            }} placeholder={'name'}/>\r\n\r\n            <button type={\"submit\"} onClick={async ()=>{await props.LoginRealThunk(window.email, window.password, window.name);\r\n\r\n                await handleClick()\r\n\r\n            }}><Link to={'/'}>login</Link></button>\r\n\r\n        </div>\r\n    </>)\r\n})\r\n\r\nexport default RealLogin","import RealLogin from './RealLogin'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {LoginAction, LoginThunk, LoginRealThunk} from \"../../redux/AuthReducer\";\r\nimport {AppStateType} from \"../../redux/redux\";\r\n\r\ntype mapDispatchToProps = {\r\n    LoginRealThunk: (email:string, password:string, name:string)=>void\r\n}\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\n\r\ntype PropsType = MapPropsType & mapDispatchToProps\r\n\r\nclass RealLoginContainer extends React.PureComponent<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <RealLogin\r\n                LoginRealThunk={this.props.LoginRealThunk}\r\n                profile={this.props.profile}\r\n\r\n            />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state:AppStateType) => {\r\n    return{\r\n        username: state.authPage.username,\r\n        email: state.authPage.email,\r\n        password: state.authPage.password,\r\n        profile: state.authPage.profile\r\n    }\r\n}\r\nexport default connect<MapPropsType,mapDispatchToProps,PropsType, AppStateType>(mapStateToProps,{LoginRealThunk})(RealLoginContainer)","import React from 'react'\r\nimport App from './App'\r\nimport {AppStateType} from \"./redux/redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {initThunk} from \"./redux/AppReducer\";\r\nimport Loader from \"./component/loader/loader\";\r\nimport {ISUserThunk} from \"./redux/AuthReducer\";\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport RealLoginContainer from \"./component/RealLogin/RealLoginContainer\";\r\n\r\n\r\ntype mapDispatchToProps = {\r\n    initThunk: () => void\r\n    ISUserThunk: () => void\r\n}\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype PropsType = MapPropsType & mapDispatchToProps\r\n\r\n\r\n\r\nclass AppContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        this.props.initThunk()\r\n        this.props.ISUserThunk()\r\n        if(this.props.eror){\r\n\r\n            return <Redirect to={'/reallogin'} />\r\n        }\r\n    }\r\n    render() {\r\n        return <>\r\n            <Route exact path=\"/reallogin\" component={RealLoginContainer}/>\r\n            {!this.props.profile.userPhotos ?\r\n             this.props.profile.isAxiosError ? <Redirect to={'/reallogin'}/> :\r\n\r\n\r\n            !this.props.isInitilized ? <Loader/> : <App isInitilized={this.props.isInitilized}/> : <App isInitilized={this.props.isInitilized}/>}\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isInitilized: state.app.isInitilized,\r\n        isFetching: state.homePage.isFetching,\r\n        eror: state.app.eror,\r\n        isAuth: state.authPage.isAuthorized,\r\n        profile: state.authPage.profile,\r\n    }\r\n}\r\n\r\n\r\nexport default connect<MapPropsType, mapDispatchToProps, PropsType, AppStateType>(mapStateToProps,\r\n    {initThunk, ISUserThunk})(AppContainer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux\";\nimport {BrowserRouter} from 'react-router-dom'\nimport {Provider} from \"react-redux\";\nimport AppContainer from \"./AppContainer\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n      <Provider store={store}>\n          <AppContainer/>\n      </Provider>\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}